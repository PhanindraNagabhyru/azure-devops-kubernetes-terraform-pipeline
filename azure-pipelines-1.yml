# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: 'echo k8s!'
  displayName: 'run a k8'  
- task: DownloadSecureFile@1
  inputs:
      secureFile: 'azure_rsa.pub'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=${client_id} -var client_secret=${client_secret} -var ssh_public_key=${ssh_public_key}'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'azure-k8s-terraform'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'terraformazurenagabhyru'
    backendAzureRmContainerName: 'terraformazurenagabhyrucontainer'
    backendAzureRmKey: 'k8'
  
- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=${client_id} -var client_secret=${client_secret} -var ssh_public_key=${ssh_public_key}'
    
  
